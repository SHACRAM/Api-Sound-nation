name: Deploy Node.js Sound-nation-api

on:
  push:
    branches:
      - main  # Déclenche le workflow sur un push vers la branche principale (modifiez si nécessaire)

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    # 1. Vérifier le code source
    - name: Checkout code
      uses: actions/checkout@v2

    # 2. Installer Docker (si nécessaire)
    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    # 3. Se connecter à Docker Hub (ou un autre registre Docker)
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # 4. Construire l'image Docker
    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/api-sound-nation:latest .

    # 5. Pousser l'image Docker vers Docker Hub (ou un autre registre)
    - name: Push Docker image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/api-sound-nation:latest

    # 6. Se connecter à votre VPS via SSH et déployer
    - name: Deploy to VPS
      uses: appleboy/ssh-action@v0.1.4
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        port: 22
        script: |
          # Mettre à jour l'image Docker sur le VPS
          docker pull ${{ secrets.DOCKER_USERNAME }}/api-sound-nation:latest

          # Arrêter le conteneur existant (si nécessaire)
          docker stop api-sound-nation-container || true
          docker rm api-sound-nation-container || true

          # Lancer le nouveau conteneur
          docker run -d --name api-sound-nation-container -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/api-sound-nation:latest
